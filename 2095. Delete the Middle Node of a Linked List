class Solution {
    public ListNode deleteMiddle(ListNode head) {
        if (head == null || head.next == null) {
            // If the list is empty or has only one node, there is no middle to delete
            return null;
        }

        int size = 0;
        ListNode currNode = head;
        ListNode deleteNode;

        while (currNode.next != null) {
            size++;
            currNode = currNode.next;
        }

        int n = (size + 1) / 2;
        // System.out.println(n);
        currNode = head;

        for (int i = 0; i < n - 1; i++) {
            currNode = currNode.next;
        }

        deleteNode = currNode.next;
        currNode.next = deleteNode.next;
        deleteNode.next = null;

        return head;
    }
}
